(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{160:function(e,n,t){"use strict";t.r(n);var s=t(0),o=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"basic-network-permissioning"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#basic-network-permissioning","aria-hidden":"true"}},[e._v("â†³")]),e._v(" Basic Network Permissioning")]),e._v(" "),t("p",[e._v("Basic Network Permissioning is a feature that controls which nodes can connect to a given node and also to which nodes the given node can dial out to. It is managed at the individual node level by providing the "),t("code",[e._v("--permissioned")]),e._v(" command line flag when starting the node.")]),e._v(" "),t("p",[e._v("If the "),t("code",[e._v("--permissioned")]),e._v(" flag is set, the node looks for a file named "),t("code",[e._v("<data-dir>/permissioned-nodes.json")]),e._v(" . This file contains the whitelist of enodes that this node can connect to and accept connections from. Therefore, with permissioning enabled, only the nodes that are listed in the "),t("code",[e._v("permissioned-nodes.json")]),e._v(" file become part of the network. If the "),t("code",[e._v("--permissioned")]),e._v(" flag is specified but no nodes are added to the "),t("code",[e._v("permissioned-nodes.json")]),e._v(" file then this node can neither connect to any node nor accept any incoming connections.")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("permissioned-nodes.json")]),e._v(" file follows the below pattern, which is similar to the "),t("code",[e._v("<data-dir>/static-nodes.json")]),e._v(" file that is used to specify the list of static nodes a given node always connects to:")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" \n     "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"enode://remoteky1@ip1:port1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n     "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"enode://remoteky1@ip2:port2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n     "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"enode://remoteky1@ip3:port3"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("p",[e._v("Sample file: (node id truncated for clarity)")]),e._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" \n   "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"enode://6598638ac5b15ee386210156a43f565fa8c485924894e2f3a967207c047470@127.0.0.1:30300"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])])]),t("p",[e._v("!!! warning\nEvery node has its own copy of the "),t("code",[e._v("permissioned-nodes.json")]),e._v(" file. If different nodes have different lists of remote keys, then each node may have a different list of permissioned nodes which may have an adverse effect on the network.")])])}),[],!1,null,null,null);n.default=o.exports}}]);