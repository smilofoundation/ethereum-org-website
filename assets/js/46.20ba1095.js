(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{275:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("title: Overview - Pluggable Architecture - Smilo")]),t._v(" "),n("p",[t._v("The Smilo client is a modified "),n("code",[t._v("geth")]),t._v(" client. One of the unique enhancements\nis the pluggable architecture which allows adding additional features as plugins to the core "),n("code",[t._v("geth")]),t._v(",\nproviding extensibility, flexibility, and isolation of Smilo features.")]),t._v(" "),n("h2",{attrs:{id:"benefits"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#benefits","aria-hidden":"true"}},[t._v("↳")]),t._v(" Benefits")]),t._v(" "),n("p",[t._v("This enhancement provides a number of benefits, including:")]),t._v(" "),n("ol",[n("li",[t._v("Allowing the implementation of certain components of the Smilo client to be changed at configuration time.")]),t._v(" "),n("li",[t._v("Supporting our community to improve the Smilo client with their own innovative implementations of the supported pluggable components.")]),t._v(" "),n("li",[t._v("Decoupling new Smilo-specific features from core "),n("code",[t._v("geth")]),t._v(" thereby simplifying the process of pulling in changes from upstream "),n("code",[t._v("geth")]),t._v(".")])]),t._v(" "),n("h2",{attrs:{id:"how-it-works"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-it-works","aria-hidden":"true"}},[t._v("↳")]),t._v(" How it works?")]),t._v(" "),n("p",[t._v("Each plugin exposes an implementation for a specific "),n("a",{attrs:{href:"https://github.com/smilofoundation/Smilo-plugin-definitions",target:"_blank",rel:"noopener noreferrer"}},[t._v("plugin interface"),n("OutboundLink")],1),t._v(" (or see "),n("code",[t._v("Pluggable Architecture -> Plugins")]),t._v(" for more details)\nPlugins are executed as a separate process and communicate with the main Smilo client "),n("code",[t._v("geth")]),t._v(" process\nover a "),n("a",{attrs:{href:"https://grpc.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC"),n("OutboundLink")],1),t._v(" interface.")]),t._v(" "),n("p",[t._v("The plugin implementation must adhere to certain gRPC services defined in a "),n("code",[t._v(".proto")]),t._v(" file corresponding to the plugin interface.\nPlugins can be written in different languages as gRPC provides a mechanism to generate stub code from "),n("code",[t._v(".proto")]),t._v(" files.")]),t._v(" "),n("p",[t._v("The network communication and RPC are handled automatically by the "),n("a",{attrs:{href:"https://github.com/hashicorp/go-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("high-level plugin library"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h2",{attrs:{id:"installing-plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installing-plugins","aria-hidden":"true"}},[t._v("↳")]),t._v(" Installing Plugins")]),t._v(" "),n("p",[t._v("Currently plugins must be manually installed into a directory (defaults to "),n("code",[t._v("plugins")]),t._v(" directory inside "),n("code",[t._v("geth")]),t._v(" data directory - default can be overriden by setting "),n("code",[t._v("baseDir")]),t._v(" in "),n("a",{attrs:{href:"../Settings"}},[t._v("plugins settings")]),t._v(").")]),t._v(" "),n("h2",{attrs:{id:"using-plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-plugins","aria-hidden":"true"}},[t._v("↳")]),t._v(" Using Plugins")]),t._v(" "),n("p",[n("a",{attrs:{href:"../Settings"}},[t._v("Plugins settings file")]),t._v(" contains a JSON that describes what plugins to be used.\nThen start "),n("code",[t._v("geth")]),t._v(" with "),n("code",[t._v("--plugins")]),t._v(" as below:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("geth "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --plugins file:///"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("to"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/plugins.json\n")])])]),n("h2",{attrs:{id:"plugin-integrity-verification"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#plugin-integrity-verification","aria-hidden":"true"}},[t._v("↳")]),t._v(" Plugin Integrity Verification")]),t._v(" "),n("p",[t._v("Plugin Central Server can be used to download and verify plugin integrity using "),n("a",{attrs:{href:"https://en.wikipedia.org/wiki/Pretty_Good_Privacy",target:"_blank",rel:"noopener noreferrer"}},[t._v("PGP"),n("OutboundLink")],1),t._v(".\nThe architecture enables the same verification process locally via "),n("code",[t._v("--plugins.localverify")]),t._v(" and "),n("code",[t._v("--plugins.publickey")]),t._v(" flags or\nremotely with custom plugin central - reference the "),n("router-link",{attrs:{to:"/Settings/"}},[n("code",[t._v("Settings")])]),t._v(" section for more information on how to support custom plugin central.")],1),t._v(" "),n("p",[t._v("If the flag "),n("code",[t._v("--plugins.skipverify")]),t._v(" is provided at runtime the plugin verification process will be disabled.")]),t._v(" "),n("p",[t._v("!!! warning\nUsing "),n("code",[t._v("--plugins.skipverify")]),t._v("  is not advised for production settings and it should be avoided as it introduces security risks.")]),t._v(" "),n("h2",{attrs:{id:"example-helloworld-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#example-helloworld-plugin","aria-hidden":"true"}},[t._v("↳")]),t._v(" Example: "),n("code",[t._v("HelloWorld")]),t._v(" plugin")]),t._v(" "),n("p",[t._v("The plugin interface is implemented in Go and Java. In this example, "),n("code",[t._v("HelloWorld")]),t._v(" plugin exposes a JSON RPC endpoint\nto return a greeting message in the configured language.\nThis plugin is "),n("router-link",{attrs:{to:"/Internals/#plugin-reloading"}},[t._v("reloadable")]),t._v(". It means that the plugin can take changes from its JSON configuration.")],1),t._v(" "),n("h3",{attrs:{id:"build-plugin-distribution-file"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#build-plugin-distribution-file","aria-hidden":"true"}},[t._v("↳")]),t._v(" Build plugin distribution file")]),t._v(" "),n("ol",[n("li",[t._v("Clone plugin repository"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recursive https://github.com/smilofoundation/Smilo-plugin-hello-world.git\n› "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Smilo-plugin-hello-world\n")])])])]),t._v(" "),n("li",[t._v("Here we will use Go implementation of the plugin"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Smilo-plugin-hello-world› "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" go\nSmilo-plugin-hello-world/go› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v("\n")])])]),n("code",[t._v("Smilo-plugin-hello-world-1.0.0.zip")]),t._v(" is now created in "),n("code",[t._v("build")]),t._v(" directory.\nNoticed that there's a file "),n("code",[t._v("hello-world-plugin-config.json")]),t._v(" which is the JSON configuration file for the plugin.")])]),t._v(" "),n("h3",{attrs:{id:"start-smilo-with-plugin-support"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#start-smilo-with-plugin-support","aria-hidden":"true"}},[t._v("↳")]),t._v(" Start Smilo with plugin support")]),t._v(" "),n("ol",[n("li",[t._v("Build Smilo"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/smilofoundation/Smilo.git\n› "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" Smilo\nSmilo› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" geth\n")])])])]),t._v(" "),n("li",[t._v("Copy "),n("code",[t._v("HelloWorld")]),t._v(" plugin distribution file and its JSON configuration "),n("code",[t._v("hello-world-plugin-config.json")]),t._v(" to "),n("code",[t._v("build/bin")])]),t._v(" "),n("li",[t._v("Create "),n("code",[t._v("geth-plugin-settings.json")]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('Smilo› cat > build/bin/geth-plugin-settings.json <<EOF\n{\n  "baseDir": "./build/bin",\n  "providers": {\n    "helloworld": {\n      "name":"Smilo-plugin-hello-world",\n      "version":"1.0.0",\n      "config": "file://./build/bin/hello-world-plugin-config.json"\n    }\n  }\n}\nEOF\n')])])])]),t._v(" "),n("li",[t._v("Run "),n("code",[t._v("geth")]),t._v(" with plugin"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Smilo› "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PRIVATE_CONFIG")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ignore "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\ngeth "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --nodiscover "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --verbosity "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --networkid "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --raft "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --raftjoinexisting "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --datadir ./build/_workspace/test "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --rpc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --rpcapi eth,debug,admin,net,web3,plugin@helloworld "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --plugins file://./build/bin/geth-plugin-settings.json "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --plugins.skipverify\n")])])]),n("code",[t._v("ps -ef | grep helloworld")]),t._v(" would reveal the "),n("code",[t._v("HelloWorld")]),t._v(" plugin process")])]),t._v(" "),n("h3",{attrs:{id:"test-the-plugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#test-the-plugin","aria-hidden":"true"}},[t._v("↳")]),t._v(" Test the plugin")]),t._v(" "),n("ol",[n("li",[t._v("Call the JSON RPC"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Smilo› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST http://localhost:8545 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --data "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"jsonrpc":"2.0","method":"plugin@helloworld_greeting","params":["Smilo Plugin"],"id":1}\'')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsonrpc"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(":1,"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello Smilo Plugin!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("Update plugin config to support "),n("code",[t._v("es")]),t._v(" language"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# update language to "es"')]),t._v("\nSmilo› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" build/bin/hello-world-plugin-config.json\n")])])])]),t._v(" "),n("li",[t._v("Reload the plugin"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Smilo› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST http://localhost:8545 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --data "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"jsonrpc":"2.0","method":"admin_reloadPlugin","params":["helloworld"],"id":1}\'')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsonrpc"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(":1,"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),t._v(":true"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[t._v("Call the JSON RPC"),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("Smilo› "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X POST http://localhost:8545 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     -H "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type: application/json"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n     --data "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{"jsonrpc":"2.0","method":"plugin@helloworld_greeting","params":["Smilo Plugin"],"id":1}\'')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsonrpc"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v(","),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(":1,"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"result"')]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hola Smilo Plugin!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);