(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{274:function(e,t,a){"use strict";a.r(t);var n=a(0),i=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("title: Plugin Development - Pluggable Architecture - Smilo")]),e._v(" "),a("p",[e._v("We leverage HashiCorp's "),a("a",{attrs:{href:"https://github.com/hashicorp/go-plugin",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("go-plugin")]),a("OutboundLink")],1),e._v(" to enable our plugin-based architecture using gRPC.")]),e._v(" "),a("p",[e._v("We recommend reading the "),a("a",{attrs:{href:"https://github.com/hashicorp/go-plugin/tree/master/examples/grpc",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("go-plugin")]),e._v(" gRPC examples"),a("OutboundLink")],1),e._v(".\nSome advanced topics which are not available in the "),a("code",[e._v("go-plugin")]),e._v(" documentation will be covered here.")]),e._v(" "),a("h2",{attrs:{id:"life-cycle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#life-cycle","aria-hidden":"true"}},[e._v("↳")]),e._v(" Life Cycle")]),e._v(" "),a("p",[e._v("A plugin is started as a separate process and communicates with the Smilo client host process via gRPC service interfaces.\nThis is done over a mutually-authenticated TLS connection on the local machine. The implementation is done inside "),a("code",[e._v("go-plugin")]),e._v("\nlibrary.  Usage is simplest when developing plugins in Golang. For plugins written in other languages, plugin authors need to have\nan understanding of the following lifecycle (see "),a("a",{attrs:{href:"#advanced-topics-for-non-go-plugins"}},[e._v("Advanced topics for non-Go plugins")]),e._v(" for more info):")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("geth")]),e._v(" looks for the plugin distribution file after reading the plugin definition from settings")]),e._v(" "),a("li",[a("code",[e._v("geth")]),e._v(" verifies the plugin distribution file integrity")]),e._v(" "),a("li",[a("code",[e._v("geth")]),e._v(" generates a self-signed certificate (aka client certificate)")]),e._v(" "),a("li",[a("code",[e._v("geth")]),e._v(" spawns the plugin with the client certificate")]),e._v(" "),a("li",[e._v("The plugin imports the client certificate and generates a self-signed server certificate for its RPC server")]),e._v(" "),a("li",[e._v("The plugin includes the RPC server certificate in the handshake")]),e._v(" "),a("li",[a("code",[e._v("geth")]),e._v(" imports the plugin RPC server certificate")]),e._v(" "),a("li",[a("code",[e._v("geth")]),e._v(" and the plugin communicate via RPC over TLS using mutual TLS")])]),e._v(" "),a("p",[e._v("Each plugin must implement the "),a("a",{attrs:{href:"#plugininitializer"}},[a("code",[e._v("PluginInitializer")])]),e._v(" gRPC service interface.\nAfter the plugin process is successfully started and connection with the Smilo client is successfully established,\nSmilo client invokes "),a("a",{attrs:{href:"#proto.PluginInitialization.Request"}},[a("code",[e._v("Init()")])]),e._v(" gRPC method in order to initialize the plugin with configuration data\nread from the plugin definition's "),a("code",[e._v("config")]),e._v(" field in "),a("router-link",{attrs:{to:"/Settings/#plugindefinition"}},[e._v("settings")]),e._v(" file.")],1),e._v(" "),a("h2",{attrs:{id:"distribution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#distribution","aria-hidden":"true"}},[e._v("↳")]),e._v(" Distribution")]),e._v(" "),a("h3",{attrs:{id:"file-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file-format","aria-hidden":"true"}},[e._v("↳")]),e._v(" File format")]),e._v(" "),a("p",[e._v("Plugin distribution file must be a ZIP file. File name format is "),a("code",[e._v("<name>-<version>.zip")]),e._v(".\n"),a("code",[e._v("<name>")]),e._v(" and "),a("code",[e._v("<version>")]),e._v(" must be the same as the values defined in the "),a("router-link",{attrs:{to:"/Settings/#plugindefinition"}},[a("code",[e._v("PluginDefinition")]),e._v(" object")]),e._v(" in the settings file.")],1),e._v(" "),a("h3",{attrs:{id:"metadata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metadata","aria-hidden":"true"}},[e._v("↳")]),e._v(" Metadata")]),e._v(" "),a("p",[e._v("A plugin metadata file "),a("code",[e._v("plugin-meta.json")]),e._v(" must be included in the distribution ZIP file.\n"),a("code",[e._v("plugin-meta.json")]),e._v(" contains a valid JSON object which has a flat structure with key value pairs.")]),e._v(" "),a("p",[e._v("Although the JSON object can include any desired information.\nThere are mandatory key value pairs which must be present.")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"entrypoint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"parameters"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" array(string)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Fields")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("name")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("("),a("strong",[e._v("Required")]),e._v(") Name of the plugin")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("version")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("("),a("strong",[e._v("Required")]),e._v(") Version of the plugin")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("entrypoint")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("("),a("strong",[e._v("Required")]),e._v(") Command to execute the plugin process")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("parameters")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("("),a("strong",[e._v("Optional")]),e._v(") Command parameters to be passed to the plugin process")])])])]),e._v(" "),a("p",[e._v("E.g.:")]),e._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Smilo-plugin-helloWorld"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"entrypoint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"helloWorldPlugin"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"advanced-topics-for-non-go-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-topics-for-non-go-plugins","aria-hidden":"true"}},[e._v("↳")]),e._v(" Advanced topics for non-Go plugins")]),e._v(" "),a("p",[e._v("Writing non-Go plugins is well-documented in "),a("a",{attrs:{href:"https://github.com/hashicorp/go-plugin/blob/master/docs/guide-plugin-write-non-go.md",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("go-plugin")]),e._v(" Github"),a("OutboundLink")],1),e._v(".\nSome additional advanced topics are described here.")]),e._v(" "),a("h3",{attrs:{id:"magic-cookie"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#magic-cookie","aria-hidden":"true"}},[e._v("↳")]),e._v(" Magic Cookie")]),e._v(" "),a("p",[e._v("Magic Cookie key and value are used as a very basic verification that a plugin is intended to be launched.\nThis is not a security measure, just a UX feature.")]),e._v(" "),a("p",[e._v("Magic Cookie key and value are injected as an environment variable while executing the plugin process.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('QUORUM_PLUGIN_MAGIC_COOKIE="CB9F51969613126D93468868990F77A8470EB9177503C5A38D437FEFF7786E0941152E05C06A9A3313391059132A7F9CED86C0783FE63A8B38F01623C8257664"\n')])])]),a("p",[e._v("The plugin and the Smilo client's magic cookies are compared.  If they are equal then the plugin is loaded.   If they are not equal, the plugin should show human-friendly output.")]),e._v(" "),a("h3",{attrs:{id:"mutual-tls-authentication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutual-tls-authentication","aria-hidden":"true"}},[e._v("↳")]),e._v(" Mutual TLS Authentication")]),e._v(" "),a("p",[e._v("The Smilo client requires the plugin to authenticate and secure the connection via mutual TLS.\n"),a("code",[e._v("PLUGIN_CLIENT_CERT")]),e._v(" environment variable is populated with Smilo Client certificate (in PEM format).\nA plugin would need to include this certificate to its trusted certificate pool, then\ngenerate a self-signed certificate and append the base64-encoded value of the certificate (in DER format)\nin the "),a("a",{attrs:{href:"https://github.com/hashicorp/go-plugin/blob/master/docs/internals.md#handshake",target:"_blank",rel:"noopener noreferrer"}},[e._v("handshake"),a("OutboundLink")],1),e._v(" message.")]),e._v(" "),a("p",[a("a",{attrs:{name:"plugininitializer"}})]),e._v(" "),a("p",[e._v("{!./PluggableArchitecture/Plugins/init_interface.md!}")]),e._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("↳")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("Please visit "),a("router-link",{attrs:{to:"/Overview/#example-helloworld-plugin"}},[e._v("Overview")]),e._v(" page for a built-in HelloWorld plugin example.")],1)])}),[],!1,null,null,null);t.default=i.exports}}]);