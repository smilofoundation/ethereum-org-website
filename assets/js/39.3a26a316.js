(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{282:function(e,t,a){"use strict";a.r(t);var r=a(0),i=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"backup-restore-of-smilo-nodes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#backup-restore-of-smilo-nodes","aria-hidden":"true"}},[e._v("↳")]),e._v(" Backup & Restore of Smilo Nodes")]),e._v(" "),a("p",[e._v("Smilo supports export and import of chain data with built in tooling. This is an effective node backup mechanism\nadapted for the specific needs of Smilo such as private transactions, permissioning, and supported consensus\nalgorithms.")]),e._v(" "),a("p",[e._v("!!! note\nSmilo chain data import and export must run after "),a("code",[e._v("geth")]),e._v(" process is stopped.")]),e._v(" "),a("h3",{attrs:{id:"node-backup-export"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-backup-export","aria-hidden":"true"}},[e._v("↳")]),e._v(" Node Backup (Export)")]),e._v(" "),a("p",[e._v("Backup functionality mimics original "),a("code",[e._v("geth export")]),e._v(" command. Smilo export accepts 3 arguments:")]),e._v(" "),a("ol",[a("li",[e._v("Export file name "),a("strong",[e._v("required")])]),e._v(" "),a("li",[e._v("First block")]),e._v(" "),a("li",[e._v("Last block "),a("em",[e._v("are optional but must be provided together when used")])])]),e._v(" "),a("h5",{attrs:{id:"sample-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample-command","aria-hidden":"true"}},[e._v("↳")]),e._v(" Sample command")]),e._v(" "),a("p",[a("code",[e._v("geth export <export file name> --datadir <geth data dir>")])]),e._v(" "),a("h3",{attrs:{id:"node-restore-import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-restore-import","aria-hidden":"true"}},[e._v("↳")]),e._v(" Node Restore (Import)")]),e._v(" "),a("p",[e._v("Restore functionality mimics original "),a("code",[e._v("geth import")]),e._v(" command but requires transaction manager environment variable.\nSmilo import must run on a new node with an initialized "),a("code",[e._v("--datadir")]),e._v(" after "),a("code",[e._v("geth init")]),e._v(" has been executed. Restore\nsupports arbitrary number of import files (at least 1).")]),e._v(" "),a("p",[e._v("!!! warning\nIf private transactions are used in the chain data, Private Transaction Manager process for the original exported\nnode must be running on the PTM ipc endpoint during import chain. Otherwise, nil pointer exceptions will be raised.")]),e._v(" "),a("h5",{attrs:{id:"sample-command-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sample-command-2","aria-hidden":"true"}},[e._v("↳")]),e._v(" Sample command")]),e._v(" "),a("p",[a("code",[e._v("PRIVATE_CONFIG=<PTM ipc endpoint> geth import <import file names...> --datadir <geth data dir>")])]),e._v(" "),a("h3",{attrs:{id:"special-consensus-considerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#special-consensus-considerations","aria-hidden":"true"}},[e._v("↳")]),e._v(" Special Consensus Considerations")]),e._v(" "),a("h5",{attrs:{id:"ibft"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ibft","aria-hidden":"true"}},[e._v("↳")]),e._v(" IBFT")]),e._v(" "),a("p",[e._v("IBFT block data contains sealer information in the header, to restore a copy of exported chain data, the new node must\nbe initialized use an IBFT genesis file with exact same validator set encoded in extra data field as original exported\nnode's genesis.")]),e._v(" "),a("h5",{attrs:{id:"raft"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raft","aria-hidden":"true"}},[e._v("↳")]),e._v(" Raft")]),e._v(" "),a("p",[e._v("Raft backup do not account for current Raft state. An exported chain data from a Raft cluster can only be used by\nnew nodes being added to that same cluster only.")])])}),[],!1,null,null,null);t.default=i.exports}}]);